= 数据库系统概念 读书笔记2 =
lds <lds2012@gmail.com>
{localdate}

== 数据模型 ==

=== 实体-联系模型(E-R) ==

现实世界由一组成为 *实体* 的基本对象以及这些对象间的 *联系* 构成.

实体通过 *属性* 来描述. *联系* 是实体间的相互关系.

实体集合::
    同一类型的所有实体的集合.

联系集合::
    同一类型的所有联系的集合.

E-R图的构成:
    - 矩形, 代表实体集.
    - 椭圆, 代表属性.
    - 菱形, 代表实体间的联系.
    - 线段, 将属性与实体集相连或将实体集与联系相连.

映射基数::
    通过某个联系集能与另一实体进行关联的实体数目.

=== 关系模型 ==

ralational model 用表的集合来表示数据和数据间的联系.它是目前使用最广泛的数据模型.

关系模型与E-R模型的抽象层次更低. 数据库设计通常基于E-R模型来进行,然后再转成关系模型.

=== 其他数据模型 ===

其他模型有:
- 面向对象的数据模型
- 对象关系数据模型
- 半结构数据模型


== 关系模型 ==

`null` 是所有可能的域的成员,表明该值未知或不存在.

=== 数据库模式 ===

数据库模式::
    database schema,它是数据库的逻辑设计.

数据库实例::
    database instance,它是给定时刻数据库中数据的一个快照.


在关系模式中使用相同属性正是将不同关系的元组联系起来的一种方法.

=== 码 ===

.外码
    一个关系模式(如r1)可能在它的属性中包括另一个关系模式(如r2)的主码,这个属性叫做r1的参照r2的 *外码* ( `foreign key` ).关系r1也称为外码依赖的 *参照关系* `(referencing ralation)` ,r2叫做外码的 *被参照关系* `(referenced ralation)`.

=== 关系代数基本运算 ===

基本运算:
    - 一元运算
        * 选择 select,选择满足给定谓词的元组.
        * 投影 project,返回参数的关系中的某些属性.(在元组中去掉不需要的变量(属性))


.关系运算的组合
关系运算的结果自身也是一个关系,

.并运算的条件:
    - 关系r和s必须是同元的,即它们的属性数目必须相同.
    - 对于所有的i,r的第i个属性的域必须和s的第i个属性的域相同.(即域相同,即属性的类型对应都是相同的)

.集合差运算
表达式 `r - s` 的结果是一个包含所有在 `r` 中而不再 `s` 中的元组.

.笛卡尔积运算
单纯的将两个关系进行笛卡尔积运算会得到非常大,且没有太多实际意义的结果,需要对结果再进行选择运算(tableA.id = tableB.id)

一个关系不能直接和自己进行笛卡尔积运算,必须先进行更名运算.

.更名运算
将关系或关系中的属性进行重命名,以方便将其结果作为临时关系参与其他运算.

例一思路:找最大的一个,首先从关系中利用笛卡尔积运算剔除最大的一个,然后利用减算法找到刚才剔除了哪一个,也就找到了最大的是哪一个数.
